apiVersion: v1
kind: Service
metadata:
  name: app1-svc
  namespace: otel
spec:
  selector:
    app: app1
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  namespace: otel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
      annotations:
        # ask the OpenTelemetry Operator to inject Python auto-instrumentation
        instrumentation.opentelemetry.io/inject-python: "true"
    spec:
      containers:
      - name: app1
        image: idoshalev/flaskserver:1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=app1"
---
apiVersion: v1
kind: Service
metadata:
  name: app2-svc
  namespace: otel
spec:
  selector:
    app: app2
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2
  namespace: otel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      labels:
        app: app2
      annotations:
        instrumentation.opentelemetry.io/inject-python: "true"
    spec:
      containers:
      - name: app2
        image: idoshalev/flaskserver:1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=app2"
